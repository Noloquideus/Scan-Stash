from typing import Optional
from uuid import uuid4

from fastapi import HTTPException


class AuthService:
    def __init__(self) -> None:
        self._user_storage = dict()
        self._session_storage = dict()

    def register(self, username: str, password: str) -> str:
        self._user_storage[username] = password

        session_id = uuid4().hex
        self._session_storage[session_id] = username

        return session_id
    
    def login(self, username: str, password: str) -> str:
        user_password = self._user_storage[username]

        if user_password != password:
            raise HTTPException(status_code=400)
        
        session_id = uuid4().hex
        self._session_storage[session_id] = username

        return session_id

    def authenticate(self, session_id: Optional[str]) -> None:
        if not session_id:
            raise HTTPException(status_code=400)
        
        username = self._session_storage.get(session_id)
        if not username:
            raise HTTPException(status_code=400)
        